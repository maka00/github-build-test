name: CMake Build Matrix

on: [push]

jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    name: ubuntu-latest
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
          - {
            name: "Ubuntu Latest GCC (C++17)",
            os: ubuntu-latest,
            build_type: "Release",
            cc: "gcc",
            cxx: "g++",
            generators: "Unix Makefiles"
          }
    steps:
      - uses: actions/checkout@v2
      - name: Print env
        run: |
          echo github.event.action: ${{ github.event.action }}
          echo github.event_name: ${{ github.event_name }}
      - name: Install dependencies on ubuntu
        if: startsWith(matrix.config.name, 'Ubuntu Latest GCC')
        run: |
          sudo apt-get update
          sudo apt-get install ninja-build cmake libtbb-dev
          ninja --version
          cmake --version
          gcc --version
          pwd
          pip3 install wheel setuptools
          pip3 install conan
          export PATH=$PATH:/home/runner/.local/bin
          echo $PATH
          sudo ln -s ~/.local/bin/conan /usr/local/bin/conan
          conan --version
          conan profile new default --detect
          conan profile update settings.compiler.libcxx=libstdc++11 default
          ls

      - name: Configure C++17
        shell: bash
        if: contains(matrix.config.name, 'C++17')
        run: |
          mkdir build
          conan install -if build .
          ls build
          cmake \
            -S . \
            -B build \
            -DCMAKE_BUILD_TYPE=${{ matrix.config.build_type }} \
            -G "${{ matrix.config.generators }}"

      - name: Build
        shell: bash
        run: cmake --build build --config ${{ matrix.config.build_type }}

      - name: Package
        shell: bash
        run: make -C build package

      - name: upload linux artifact
        uses: actions/upload-artifact@v2
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          name: github-build-test-0.1.1.gz
          path: build/*.gz